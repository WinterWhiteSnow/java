필터 인터셉터 리스너 이거 정확하게 구분 및 이해 필요

클라이언트한테서 요청, 서버가 이를 응답함
요청이 오면 서버내에서 웹 서버가 먼저 받음
정적페이지용이다? 바로 보내주면되고
동적이면? 동적페이지를 "만들어서" 넘겨줌 누가 만들어줌? WAS가 

톰캣은 서버 그자체고, 톰캣의 상위개념은 was, 즉 톰캣은 was들 중 하나
동적페이지를 짜주는 것이 was, was안에는 서블릿 컨테이너가 있고, 서블릿 컨테이너안에는 서블릿이 여러개있음
xml,어노테이션(WebServlet("/머시기")) 등등방법으로 서블릿 등록가능
서브릿 파일(.jsp)을 쭉 만들고, 클래스 위에다가 webServlet("url")이렇게 등록
내부 메서드에서 또 요청에따라 달리 실행(doGet, doPost, init, service 등등)
근데 서블릿 방식은 문제가있는데 요청에대한 셋팅(인코딩 등등)이 겹치는 부분이 있음(중복 셋팅이라던가.. response를 사용하는 메서드마다 response.set머시기해서 인코딩 방식을 utf-8로 하는 그런거), 그리고 웹 표준을 지키는데 있어 서블릿을 사용하면서도 더 간편한 방법이 있음. 그게 스프링

스프링 - 셋팅이랑 셋팅값만 넘겨줘
서블릿 내에 스프링이 존재, 스프링내에 디스패처서블릿이 존재, 디스패처서블릿에 셋팅만하고, 모든 기능은 디스패처서블릿을 반드시 거쳐게 하면 중복 셋팅 X

1. web.xml에다가 디스패처서블릿을 설정
mapping = 연결한다~ 고 생각하기..  
web.xml => 스프링이 켜질때 실행되는것, 가장먼저! 필터, 리스너, 서블릿, 등등 가장 먼저 셋팅돼야하는 것들
모든 요청은 디스패처서블릿을 거친다
<init-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>★/WEB-INF/spring/appServlet/servlet-context.xml★ 요부분
	</param-value>
</init-param>
★이부분★이 servlet-context.xml랑 연결하는것
그리고 init-param은 클래스도 가져옴!
context-param은 그냥 등록만하고 클래스도 안가져옴.. 그게 현재의 root-context.xml <- 이거 내일 mysql랑 연결하는 작업 함!

여기까지가 초기설정끝

root-context.xml -> db의 연결통로
db에서 가져오기위해 정보를 일부분(대체 어떤 데이터를 가져와야 하나? 에 대한 기준점이 될 정보들)

context = 설정임, 서블릿내에 규정돼있음

핸들러 = 넘겨주는 역할
디스패처 -> 핸들러(구현안함, 스프링이 이미 만들어놨음) -> 디스패처-> 컨트롤러()..
여기부턴 디스패처관련해서 과정들 보면서 복습 ㄱㄱ