MVC과 서블릿

클라이언트와 서버가 있음
서버는 WAS라고 웹 어플리케이션 서버인데, 그 서버의 도구로 종류는 다양하지만
무료이면서 점유율이 높은 톰캣을 사용함

서버 내부엔 /main에 해당하는 서블릿이있고, 우리는 요청을 받으면 일딴 무조건 거쳐가야하는 메인 서블릿을
딱 한개만 만듦, 이를 frontControllerPattern이라고 부름
메인 서블릿의 내부엔 여러가지 메서드가 있는데(doget, dopost 등등)
이것들 메서드를 호출하는 방법은?
1. html에서 form태그로 action이라는 key값으로 value값을 각각 regist, post, delete등등으로해서 sumit
2. 메인서블릿(@Webservlet("/main") - 어노테이션, 추후에 xml에 bean등록 해야함 -> context-scan으로 빈등록했음!)으로 
그게 넘어가면 request.getAttribute("action") -> regist, post, delete 값들이 나오고
switch (action)
case1 .... case2.... 이런식으로 넘겨줬음
그 후에 로직처리를 어찌어찌해서 forst 혹은 redirect방식으로 jsp(자바 서버 페이지)로 접근함

포워드 = 리퀘스트, 리스폰스가 그대로 있음
리다이렉트 -> 클->서/서->클/클->서/서->클 네번 왔다갔다함(?) 처음의 리퀘스트, 리스폰스X
리다이렉트 성공 = 300

이 일련의 과정들을 보니 서블릿의 업무가 너무 많음
그래서 업무를 효율적으로 분화시킴
DTO와 DAO, controller라는 폴더를 따로 만들고 
각기 객체만 다루는곳, 로직(service)만 다루는 곳, 메인서블릿
이렇게관리함

메인서블릿 -> 디스패처서블릿!
디스패처서블릿은 관제탑같은 녀석
핸들러매핑 = 알잘딱 컨트롤러 소개해줌
컨트롤러 = 알잘딱 컨트롤러
모델앤드뷰 => model 은 모든 객체의 집합, view는 보여질 페이지의 모습..을 만들어줄 뷰의 이름

일련의 과정들을 살펴보자면
1. 클라이언트가 요청! 디스패처서블릿이 이를 제일 처음에 받음
2. 디스패처 서블릿이 핸들러 매핑한테 알잘딱 컨트롤러 소개해달라고함
3. 핸들러 매핑이 ok, 컨트롤러를 디스패처 서블릿한테 보내줌
4. 디스패처가 그 컨트롤러한테 다시 클라이언트의 요청을 보내면서 이게 해줘함
5. 컨트롤러가 ok, 일을 수행하는데 서비스(dao), 레포지토리수준(dto)으로하나 필요하다면 db까지(dao를 통해서)
6. 컨트롤러가 직접 일을 하는게 아니고 사실 컨트롤러도 하청을 맡김
7. 컨트롤러는 모델한테 이거 해줘하고, 모델은 결과물을 컨트롤러한테 다시 주면서 이 결과를 잘 보여줄 알잘딱 뷰의 이름을 알려줌
8. 모델에게서 가공된 결과물과 알잘딱 뷰의 이름을 알게된 컨트롤러가 디스패처한테 고스란히 보내줌
9. 디스패처는 컨트롤러에게 받은 결과물(model, 객체)을 잘 보여줄 알잘딱 뷰(컨트롤러가 알려줌)에게가서 해줘함
10. 뷰가 모델갖고 알잘딱으로 잘 만들어줘서 디스패처에게 다시 주고, 이제서야 디스패처는 클라이언트에게 결과물을 도출함

디스패처서블릿은 설정파일이 두개
servlet-context.xml 와 root-webapplication.xml
전자는 웹과 관련한 모든 설정, 컨트롤러, 뷰리졸버, 핸들러매핑, 디스패처서블릿 등록 및 적용범위(0하고 /이거)
후자는 db와 관련한.. 거인데 아직 안배워서 web.xml에다가 context-param으로 등록만해놂

 
디스패처서블릿

서블릿등록 1. web.xml에 직접 등록 2.@webServlet 어노테이션 이용
내가 만든 서블릿 -> web.xml으로 등록 가능? 등록가능! 우리 한적있음...
내가 만든 서블릿 -> @WebServlet 가능? 가능!
남이 만든 서블릿 -> web.xml으로 등록가능? ok!
남이 만든 서블릿 -> @WebServlet 가능? ㄴㄴ
다시 돌아와서
디스패처서블릿 = 남이 만든것 -> web.xml으로만 등록가능

어떤 빈에 property가 있다 = setter가 있다
그리고 JSTL에서 User.name = 이거 사실 getName이거임!!
그래서 user.hello == getHello

데이터를 실어보내고싶은데 ModelAndView방식으론 하기싫어( ModelAndView  객체 생성해서 거기다가 set해서 데이터넣어주고 이걸 반환해주기 싫어)
그러면 파라미터 부분에 Model이라는 객체를 넣어서
(직접 파라미터를 받는게 아니고 JS의 Event같은 이미 생성된 객체인거임)를 받아서
(public String test2_2(Model model) 이렇게 적어두기만 하면, 
파라미터로 직접 받는게 아니고 event처럼 역할을 함) 
거기에다가 set해두면 그페이지에서 set해놓은걸 가져다 쓸수잇음

@RequestParam("id") String value
리퀘스트에 id라는 키값으로 담긴 값을 value라는 이름으로 선언한 상태임
@RequestParam("pw") String pwValue
리퀘스트에서 pw라는 키값으로 받은 value를 pwValue라는 변수에 담은 상태
